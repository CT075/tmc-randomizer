//when item 0x1B is collected, save the trap type for it to trigger when link regains control
PUSH; ORG $A744A; SHORT 0; jumpToHack(trapSet); POP
ALIGN 4
trapSet:
#incbin "asm/trapSet.dmp"

//when links regains control, trigger the trap
PUSH; ORG $804DA; SHORT 0; jumpToHack(trapTrigger); POP
ALIGN 4
trapTrigger:
#incbin "asm/trapTrigger.dmp"
POIN trapTable

ALIGN 4
trapTable: //pointers to routines for each trap, based on subID of the 0x1B item
POIN iceTrap; WORD 8
POIN fireTrap; WORD 8
POIN $797B0; WORD 8 //zapTrap
POIN bombTrap; WORD 0
POIN moneyTrap; WORD 0
POIN stinkTrap; WORD 0
WORD 0 0 //terminator

ALIGN 4
iceTrap:
#incbin "asm/iceTrap.dmp"

ALIGN 4
fireTrap:
#incbin "asm/fireTrap.dmp"

ALIGN 4
bombTrap:
#incbin "asm/bombTrap.dmp"

ALIGN 4
moneyTrap:
#incbin "asm/moneyTrap.dmp"

ALIGN 4
stinkTrap:
#incbin "asm/stinkTrap.dmp"

//give trap item the smith sword icon, why not
PUSH; ORG $125BF8; BYTE 1 0 1 4 0 0 0x41 5; POP
PUSH; ORG $FD588; POIN $FD25D; POP

PUSH; ORG $85C60; jumpToHack(moneyTrapEffect); POP
ALIGN 4
moneyTrapEffect:
#incbin "asm/moneyTrapEffect.dmp"

